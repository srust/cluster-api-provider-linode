import ts from "typescript";
import { SignatureMetadata, SymbolMetadata } from "./metadata.js";
/**
 * Convert the function signature from the compiler API into a lighter data type.
 *
 * This functions returns the params serialized and its returns type.
 *
 * @param checker The typescript compiler checker.
 * @param signature The signature to convert.
 */
export declare function serializeSignature(checker: ts.TypeChecker, signature: ts.Signature): SignatureMetadata;
/**
 * Convert the TypeScript symbol from the compiler API into a lighter data type.
 *
 * This function returns the name of the symbol, with its typename and its
 * documentation.
 * This function also returns the actual TypeScript type for additional
 * introspection.
 *
 * @param checker The typescript compiler checker.
 * @param symbol The type to convert.
 */
export declare function serializeSymbol(checker: ts.TypeChecker, symbol: ts.Symbol): SymbolMetadata & {
    type: ts.Type;
};
/**
 * Convert the TypeScript type from the compiler API into a readable textual
 * type.
 *
 * @param checker The typescript compiler checker.
 * @param type The type to convert.
 */
export declare function serializeType(checker: ts.TypeChecker, type: ts.Type): string;
//# sourceMappingURL=serialize.d.ts.map